{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\.atom\\\\web development\\\\react-weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport UilReact from '@iconscout/react-unicons/icons/uil-react';\nimport TopButtons from './components/TopButtons';\nimport Inputs from './components/Inputs';\nimport TimeAndLocation from './components/TimeAndLocation';\nimport TemperatureAndDetails from './components/TemperatureAndDetails';\nimport Forecast from './components/Forecast';\nimport getFormattedWeatherData from './services/weatherService';\nimport { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState({\n    q: 'Dehradun'\n  });\n  const [units, setUnits] = useState('metric');\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const message = query.q ? query.q : 'current location';\n      toast.info('Fetching weather for ' + message);\n      await getFormattedWeatherData({\n        ...query,\n        units\n      }).then(data => {\n        toast.success(`Successfully fetched weather for ${data.name}, ${data.country}.`);\n        setWeather(data);\n      });\n    };\n    fetchWeather();\n  }, [query, units]);\n  const formatBackground = () => {\n    if (!weather) return 'from-cyan-700 to-blue-700';\n    const threshold = units === 'metric' ? 20 : 60;\n    if (weather.temp <= threshold) return 'from-cyan-700 to-blue-700';\n    return 'from-yellow-700 to-orange-700';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br from-cyan-700 to-blue-700\n    h-fit shadow-xl shadow-gray-400 ${formatBackground()}`,\n    children: [/*#__PURE__*/_jsxDEV(TopButtons, {\n      setQuery: setQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n      setQuery: setQuery,\n      units: units,\n      setUnits: setUnits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TimeAndLocation, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureAndDetails, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"hourly forecast\",\n        items: weather.hourly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"daily forecast\",\n        items: weather.daily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 5000,\n      theme: \"colored\",\n      newestOnTop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3Fy45e1Z8Xv0xT0B8PuJ4erI9VQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["UilReact","TopButtons","Inputs","TimeAndLocation","TemperatureAndDetails","Forecast","getFormattedWeatherData","useEffect","useState","ToastContainer","toast","jsxDEV","_jsxDEV","App","_s","query","setQuery","q","units","setUnits","weather","setWeather","fetchWeather","message","info","then","data","success","name","country","formatBackground","threshold","temp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","items","hourly","daily","autoClose","theme","newestOnTop","_c","$RefreshReg$"],"sources":["C:/Users/Dell/.atom/web development/react-weather-app/src/App.js"],"sourcesContent":["import './App.css';\r\nimport UilReact from '@iconscout/react-unicons/icons/uil-react'\r\nimport TopButtons from './components/TopButtons';\r\nimport Inputs from './components/Inputs';\r\nimport TimeAndLocation from './components/TimeAndLocation';\r\nimport TemperatureAndDetails from './components/TemperatureAndDetails';\r\nimport Forecast from './components/Forecast';\r\nimport getFormattedWeatherData from './services/weatherService';\r\nimport { useEffect, useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n\r\nconst [query, setQuery] = useState({q: 'Dehradun'});\r\nconst [units, setUnits] = useState('metric');\r\nconst [weather, setWeather] = useState(null)\r\n\r\nuseEffect(()=>{\r\n  const fetchWeather = async () =>{\r\n    const message = query.q ? query.q : 'current location'\r\n\r\n    toast.info('Fetching weather for ' + message);\r\n    (await getFormattedWeatherData({...query,units}).then(\r\n      (data) =>{\r\n        toast.success(`Successfully fetched weather for ${data.name}, ${data.country}.`)\r\n        setWeather(data);\r\n      }\r\n    ));\r\n     \r\n   };\r\n   \r\n   fetchWeather();\r\n},[query,units]);\r\n\r\nconst formatBackground = () =>{\r\n  if(!weather) return 'from-cyan-700 to-blue-700'\r\n  const threshold = units === 'metric' ? 20 : 60\r\n  if(weather.temp <= threshold) return 'from-cyan-700 to-blue-700'\r\n\r\n  return 'from-yellow-700 to-orange-700'\r\n}\r\n\r\n  return (\r\n    <div className={`mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br from-cyan-700 to-blue-700\r\n    h-fit shadow-xl shadow-gray-400 ${formatBackground()}`}>\r\n      <TopButtons setQuery={setQuery}/>\r\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits}/>\r\n\r\n      {weather && (\r\n        <div>\r\n      <TimeAndLocation weather={weather}/>\r\n      <TemperatureAndDetails weather={weather}/>\r\n      <Forecast title='hourly forecast' items={weather.hourly}/>\r\n      <Forecast title='daily forecast' items={weather.daily}/>\r\n        </div>\r\n      )}\r\n      <ToastContainer autoClose={5000} theme='colored' newestOnTop={true}/>\r\n     </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,0CAA0C;AAC/D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,qBAAqB,MAAM,oCAAoC;AACtE,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,uBAAuB,MAAM,2BAA2B;AAC/D,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC;IAACS,CAAC,EAAE;EAAU,CAAC,CAAC;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAI;IACZ,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAW;MAC9B,MAAMC,OAAO,GAAGR,KAAK,CAACE,CAAC,GAAGF,KAAK,CAACE,CAAC,GAAG,kBAAkB;MAEtDP,KAAK,CAACc,IAAI,CAAC,uBAAuB,GAAGD,OAAO,CAAC;MAC5C,MAAMjB,uBAAuB,CAAC;QAAC,GAAGS,KAAK;QAACG;MAAK,CAAC,CAAC,CAACO,IAAI,CAClDC,IAAI,IAAI;QACPhB,KAAK,CAACiB,OAAO,CAAE,oCAAmCD,IAAI,CAACE,IAAK,KAAIF,IAAI,CAACG,OAAQ,GAAE,CAAC;QAChFR,UAAU,CAACK,IAAI,CAAC;MAClB,CACF,CAAC;IAEF,CAAC;IAEDJ,YAAY,CAAC,CAAC;EACjB,CAAC,EAAC,CAACP,KAAK,EAACG,KAAK,CAAC,CAAC;EAEhB,MAAMY,gBAAgB,GAAGA,CAAA,KAAK;IAC5B,IAAG,CAACV,OAAO,EAAE,OAAO,2BAA2B;IAC/C,MAAMW,SAAS,GAAGb,KAAK,KAAK,QAAQ,GAAG,EAAE,GAAG,EAAE;IAC9C,IAAGE,OAAO,CAACY,IAAI,IAAID,SAAS,EAAE,OAAO,2BAA2B;IAEhE,OAAO,+BAA+B;EACxC,CAAC;EAEC,oBACEnB,OAAA;IAAKqB,SAAS,EAAG;AACrB,sCAAsCH,gBAAgB,CAAC,CAAE,EAAE;IAAAI,QAAA,gBACrDtB,OAAA,CAACX,UAAU;MAACe,QAAQ,EAAEA;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjC1B,OAAA,CAACV,MAAM;MAACc,QAAQ,EAAEA,QAAS;MAACE,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAE9DlB,OAAO,iBACNR,OAAA;MAAAsB,QAAA,gBACFtB,OAAA,CAACT,eAAe;QAACiB,OAAO,EAAEA;MAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpC1B,OAAA,CAACR,qBAAqB;QAACgB,OAAO,EAAEA;MAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC1C1B,OAAA,CAACP,QAAQ;QAACkC,KAAK,EAAC,iBAAiB;QAACC,KAAK,EAAEpB,OAAO,CAACqB;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC1D1B,OAAA,CAACP,QAAQ;QAACkC,KAAK,EAAC,gBAAgB;QAACC,KAAK,EAAEpB,OAAO,CAACsB;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CACN,eACD1B,OAAA,CAACH,cAAc;MAACkC,SAAS,EAAE,IAAK;MAACC,KAAK,EAAC,SAAS;MAACC,WAAW,EAAE;IAAK;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAGX;AAACxB,EAAA,CAjDQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}